<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- Spring 설정용 네임스페이스와 스키마 위치 정의. -->

    <!--    <context:component-scan base-package="com.example"/>-->
    <!-- com.example 패키지 스캔 설정. 현재 비활성화 상태. -->

    <!-- 주석 처리된 빈 설정들 -->
    <!--    <bean class="demo.Apple" id="apple"/>-->
    <!-- Apple 객체 생성 설정. -->

    <!--    <bean class="demo.Kiwi" id="kiwi"/>-->
    <!-- Kiwi 객체 생성 설정. -->

    <!--    <bean id="samsungRemote" class="test.SamsungRemote"/>-->
    <!-- SamsungRemote 객체 생성 설정. -->

    <!--    <bean id="samsungTV" class="test.SamsungTV">-->
    <!--        <constructor-arg ref="samsungRemote"/>-->
    <!--    </bean>-->
    <!-- SamsungTV 객체 생성 및 생성자 주입 설정. -->

    <!--    <bean id="lgRemote" class="test.LgRemote"/>-->
    <!-- LgRemote 객체 생성 설정. -->

    <!--    <bean id="lgTV" class="test.LgTV">-->
    <!--        <property name="remote" ref="lgRemote"/>-->
    <!--    </bean>-->
    <!-- LgTV 객체 생성 및 setter 주입 설정. -->

    <bean class="com.example.biz.common.LogAdvice" id="LogAdvice" />
    <!-- 로깅 관련 Advice 객체 생성. -->

    <bean class="com.example.biz.common.LogAdvice22" id="LogAdvice22" />
    <!-- 두 번째 로깅 Advice 객체 생성. -->

    <bean class="com.example.biz.common.ReturningAdvice" id="ra" />
    <!-- 메소드 반환 후 실행될 Advice 객체 생성. -->

    <bean class="com.example.biz.common.ThrowingAdvice" id="ta" />
    <!-- 예외 발생 시 실행될 Advice 객체 생성. -->

    <bean class="com.example.biz.common.AroundAdvice" id="aa" />
    <!-- 메소드 실행 전후에 실행될 Advice 객체 생성. -->

    <bean class="com.example.biz.common.SignUpAdvice" id="signupAdvice" />


    <aop:aspectj-autoproxy />

    <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
        <!-- setter 주입 -->
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
        <property name="username" value="C##TEST" />
        <property name="password" value="1234" />
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <context:component-scan base-package="com.example.biz.board.impl" />
    <!-- 게시판 관련 컴포넌트 스캔 설정. -->

    <context:component-scan base-package="com.example.biz.member.impl" />
    <!-- 회원 관련 컴포넌트 스캔 설정. -->

    <context:component-scan base-package="com.example.biz.common" />
    <!-- 공통 기능 관련 컴포넌트 스캔 설정. -->

</beans>
